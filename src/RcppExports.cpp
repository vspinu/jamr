// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// c_jam
void c_jam(SEXP x, const std::string path);
RcppExport SEXP jamr_c_jam(SEXP xSEXP, SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::string >::type path(pathSEXP);
    c_jam(x, path);
    return R_NilValue;
END_RCPP
}
// c_jar
void c_jar(SEXP x, const std::string& path, bool append, int rows_per_chunk);
RcppExport SEXP jamr_c_jar(SEXP xSEXP, SEXP pathSEXP, SEXP appendSEXP, SEXP rows_per_chunkSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    Rcpp::traits::input_parameter< bool >::type append(appendSEXP);
    Rcpp::traits::input_parameter< int >::type rows_per_chunk(rows_per_chunkSEXP);
    c_jar(x, path, append, rows_per_chunk);
    return R_NilValue;
END_RCPP
}
// c_unjam
SEXP c_unjam(const std::string& path);
RcppExport SEXP jamr_c_unjam(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(c_unjam(path));
    return rcpp_result_gen;
END_RCPP
}
// c_unjar_bind
SEXP c_unjar_bind(const std::string& path, int chunks);
RcppExport SEXP jamr_c_unjar_bind(SEXP pathSEXP, SEXP chunksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    Rcpp::traits::input_parameter< int >::type chunks(chunksSEXP);
    rcpp_result_gen = Rcpp::wrap(c_unjar_bind(path, chunks));
    return rcpp_result_gen;
END_RCPP
}
// c_unjar_nobind
SEXP c_unjar_nobind(const std::string& path, int chunks);
RcppExport SEXP jamr_c_unjar_nobind(SEXP pathSEXP, SEXP chunksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    Rcpp::traits::input_parameter< int >::type chunks(chunksSEXP);
    rcpp_result_gen = Rcpp::wrap(c_unjar_nobind(path, chunks));
    return rcpp_result_gen;
END_RCPP
}
